//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pundit.Console {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Pundit.Console.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pundit v{0} - http://pundit.codeplex.com.
        /// </summary>
        internal static string Banner {
            get {
                return ResourceManager.GetString("Banner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Copyright (c) 2011 Ivan Gavryliuk.
        ///
        ///syntax: {0} &lt;command&gt; [&lt;parameter&gt; [&lt;parameter&gt;[...]]] [&lt;options&gt;]
        ///
        ///to get extended help on a command type &quot;{0} help &lt;command&gt;&quot; i.e &quot;{0} help pack&quot;
        ///
        ///Commands:
        ///  pack - create package based on manifest definition
        ///  publish - publish package to a repository(ies)
        ///  template - create an empty (and invalid) manifest
        ///  resolve - resolve dependencies and refresh project packages specifiend in the manifest.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to syntax: {0} pack [&lt;manifest location&gt;] [-o:&lt;target folder&gt;]
        ///
        ///Creates a package based on the manifest file. Source files required for the package must exist.
        ///  &lt;manifest location&gt; is optional and if not specified  default manifest in current folder will be used
        ///  &quot;o&quot; parameter is optional and specifies output folder for the compiled package; by default folder of manifest&apos;s location is used
        ///
        ///examples:
        ///  {0} pack
        ///  {0} pack mymanifest.pundit
        ///  {0} pack -o:c:\packages\.
        /// </summary>
        internal static string Help_pack {
            get {
                return ResourceManager.GetString("Help_pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to syntax: {0} publish [&lt;package&gt;] [-r:&lt;repository name&gt;].
        /// </summary>
        internal static string Help_publish {
            get {
                return ResourceManager.GetString("Help_publish", resourceCulture);
            }
        }
    }
}
